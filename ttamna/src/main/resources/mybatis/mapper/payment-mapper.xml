<?xml version="1.0" encoding="UTF-8" ?> 

<!-- mybatis mapper 파일
	- DBMS에서 실행할 SQL구문을 저장하는 XML파일 
	- namespace를 통해서 여러개의 매퍼를 구분한다
	- 테이블 당 한 개씩 만드는 것이 일반적이면 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다
 	- <insert>, <select>, <update>, <delete>를 이용해서 CRUD 구문을 작성한다
 	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다
 	- parameterType : 구문을 실행하기 위해 필요한 데이터의 형태 
 	- resultType : 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다
 -->

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pay">
	
	<select id="seq" resultType="int">
		select payment_seq.nextval from dual
	</select>

	<!-- 상품결제 -->
	<insert id="insert" parameterType="PaymentDto">
		insert into payment values(
			#{payNo}, #{tid}, #{memberId}, #{itemName}, #{totalAmount}, sysdate, '결제완료', '구매', null
		)
	</insert>
	
	<!-- 기부 -->
	<insert id="insertDonation" parameterType="PaymentDto">
		insert into payment values(
			#{payNo}, #{tid}, #{memberId}, '1회 기부', #{totalAmount}, sysdate, '결제완료', '기부',  #{donationNo}
		)
	</insert>
	
	
	
	<select id="list" resultType="PaymentDto">
		select * from payment order by pay_no desc
	</select>
	
	<select id="get" parameterType="int" resultType="PaymentDto">
		select * from payment where pay_no = #{payNo}
	</select>
	
	<!-- 
		1. buyNo를 이용하여 buy_detail 테이블의 상품 상태를 조회
		2. 조회 결과에 따라 다음과 같이 수정
			- 상품개수 == 취소개수 : 전체취소
			- 상품개수 == 결제개수 : 결제완료
			- 나머지 : 부분취소 
			
		전체 개수 파악 구문 : select count(*) from buy_detail where buy_no = #{no}
		취소 개수 파악 구문 : select count(*) from buy_detail where buy_no = #{no} and status = '취소'
		결제 개수 파악 구문 : select count(*) from buy_detail where buy_no = #{no} and status = '결제'
	 -->
	<update id="refresh" parameterType="int">
		update payment
	<!-- 	set status = '결제완료' or '부분취소' or '전체취소' -->
		set status = 
		case
			when (select count(*) from pay_detail where pay_no = #{no}) = (select count(*) from pay_detail where pay_no = #{payNo} and status = '결제') 
				then '결제완료'
			when (select count(*) from pay_detail where pay_no = #{no}) = (select count(*) from pay_detail where pay_no = #{payNo} and status = '취소') 
				then '전체취소'
			else '부분취소'
		end
		where pay_no = #{payNo}
	</update>
	
	<!-- 기부 취소 -->
	<update id="cancelDonation" parameterType="int">
		update payment set status = '전체취소' where pay_no = ${payNo}
	</update>
	
	<!-- 회원목록 + 검색 + 페이지네이션 -->
	<select id="listPaging" parameterType="map" resultType="PaymentDto">
		select * from (
			select rownum rn, TMP.* from (
				select * from payment
					where member_id=#{memberId}
				order by pay_no desc
			)TMP
		) where rn between #{startRow} and #{endRow}		
	</select>
	<!-- 블록구하기 -->
	<select id="count"  parameterType="String" resultType="int">
		select count(*) from payment where member_id=#{memberId}
	</select>
	
	<!-- 최근 7일간 기부금액 일별 통계 -->
	<select id="donationDaily" resultType="DonationChartVO">
	 select
        d.dt "date",
        nvl(p.daily, 0) "dailyAmount"
    from
        (select 
		        to_char((sysdate-7) + level - 1, 'YY/MM/DD') dt ,
		        to_char(to_date(sysdate-7, 'YY/MM/DD') + rownum - 1, 'day') dow
		    from dual <![CDATA[connect by level <= ((sysdate-1) - (sysdate-7) +1 )]]>)d
        left outer join    
        (select 
		        to_char(pay_time, 'YY/MM/DD') dt, 
		        to_char(pay_time, 'DAY') dow,
                sum(total_amount) daily
		    from payment where <![CDATA[sysdate - pay_time <= 7]]> and pay_type='기부' and status='결제완료'
		    group by to_char(pay_time, 'YY/MM/DD'), to_char(pay_time, 'DAY'))p
        on d.dt = p.dt
        order by d.dt asc
	</select>
	
	<!-- 이번달 일별 기부금액 -->
	<select id="thisMonthDaily" resultType="DonationChartVO">
	 select
		 d.dt "thisMonthDate",
		 nvl(p.daily, 0) "thisMonthDailyAmount"
		from
		    (select 
		        to_char(trunc(sysdate, 'MM') + level - 1, 'YY/MM/DD') dt ,
		        to_char(to_date(trunc(sysdate, 'MM'), 'YY/MM/DD') + rownum - 1, 'month')
		    from dual <![CDATA[connect by level <= (last_day(sysdate) - trunc(sysdate, 'MM') +1 )]]>)d
		left outer join 
		    (select 
		        to_char(pay_time, 'YY/MM/DD') dt, 
		        sum(total_amount) daily,
                pay_type
		    from payment where pay_type='기부' and status='결제완료'
		    group by to_char(pay_time, 'YY/MM/DD'), pay_type)p
		on p.dt = d.dt 
    order by d.dt asc
	</select>
	
	<!-- 이번달 누적 기부금액 -->
	<select id="thisMonth" resultType="DonationChartVO">
	 select 
      to_char((TO_DATE(sysdate,'YYYY-MM-DD')), 'month') "thisMonth", 
      sum("sum") "thisMonthAmount" 
      from (
		select
		 d.dt "date",
		 nvl(p.at, 0) "sum"
		from
		    (select 
		        to_char(trunc(sysdate, 'MM') + level - 1, 'YY/MM/DD') dt ,
		        to_char(to_date(trunc(sysdate, 'MM'), 'YY/MM/DD') + rownum - 1, 'month') mth
		    from dual <![CDATA[connect by level <= (last_day(sysdate) - trunc(sysdate, 'MM') +1 )]]>)d
		left outer join 
		    (select 
		        to_char(pay_time, 'YY/MM/DD') dt, 
		        to_char(pay_time, 'DAY') dow, 
		        sum(total_amount) at,
		    	pay_type pt
		    from payment where pay_type='기부' and status='결제완료'
            group by to_char(pay_time, 'YY/MM/DD'), to_char(pay_time, 'DAY'), pay_type)p
		on p.dt = d.dt 
		order by d.dt asc)
	</select>
	
	<!-- 최근 6개월간 월별 누적 기부금액 -->
	<select id="amountMonthly" resultType="DonationChartVO">
	select
		d.mth "monthly",
		nvl(p.at, 0) "monthlyAmount"
	   from
		    (select 
		       to_char(add_months(to_date(sysdate, 'YY/MM/DD'), - (level-1)-1), 'month') mth 
		     from dual
		     <![CDATA[connect by add_months(to_date(sysdate, 'YY/MM/DD'), - (level-1)-1) >= add_months(to_date(sysdate, 'YY/MM/DD'), -6)]]>)d
		left outer join
		    (select 
		        to_char(pay_time, 'month') mth,
		        sum(total_amount) at,
                pay_type pt
		    from payment where pay_type='기부' and status='결제완료'
		    group by to_char(pay_time, 'month'), pay_type)p
		on p.mth = d.mth 
		order by lpad(d.mth, 2, '0')
	</select>
	
	<!-- 최근 12개월간 월별 누적 기부금액 -->
	<select id="amountMoy" resultType="DonationChartVO">
	  select
		d.mth "moy",
		nvl(p.at, 0) "moyAmount"
	   from
		    (select 
		        to_char(add_months(to_date(sysdate, 'YY/MM/DD'), - (level-1)-1), 'month') mth 
		      from dual
		        connect by add_months(to_date(sysdate, 'YY/MM/DD'), - (level-1)-1) >= add_months(to_date(sysdate, 'YY/MM/DD'), -11) )d
		left outer join
		    (select 
		        to_char(pay_time, 'month') mth,
		        sum(total_amount) at,
                pay_type pt
		    from payment where pay_type='기부' and status='결제완료'
            group by to_char(pay_time, 'month'), pay_type)p
		on p.mth = d.mth 
		order by lpad(d.mth, 2, '0')
	</select>
	
	<!-- 기부금액 총 누적액 -->
	<select id="totalAmount" resultType="long">
		select nvl(sum(total_amount), 0) from payment where pay_type='기부' and status='결제완료'
	</select>
	
	
	<!-- 최근 7일간 상품 판매금액 일별 통계 -->
	<select id="shopDaily" resultType="ShopChartVO">
	 select
        d.dt "date",
        nvl(p.daily, 0) "dailyAmount"
    from
        (select 
		        to_char((sysdate-7) + level - 1, 'YY/MM/DD') dt ,
		        to_char(to_date(sysdate-7, 'YY/MM/DD') + rownum - 1, 'day') dow
		    from dual <![CDATA[connect by level <= ((sysdate-1) - (sysdate-7) +1 )]]>)d
        left outer join    
        (select 
		        to_char(pay_time, 'YY/MM/DD') dt, 
		        to_char(pay_time, 'DAY') dow,
                sum(total_amount) daily
		    from payment where <![CDATA[sysdate - pay_time <= 7]]> and pay_type='구매' and status='결제완료'
		    group by to_char(pay_time, 'YY/MM/DD'), to_char(pay_time, 'DAY'))p
        on d.dt = p.dt
        order by d.dt asc
	</select>
	
	<!-- 이번달 일별 상품 판매금액 -->
	<select id="shopThisMonthDaily" resultType="ShopChartVO">
	 select
		 d.dt "thisMonthDate",
		 nvl(p.daily, 0) "thisMonthDailyAmount"
		from
		    (select 
		        to_char(trunc(sysdate, 'MM') + level - 1, 'YY/MM/DD') dt ,
		        to_char(to_date(trunc(sysdate, 'MM'), 'YY/MM/DD') + rownum - 1, 'month')
		    from dual <![CDATA[connect by level <= (last_day(sysdate) - trunc(sysdate, 'MM') +1 )]]>)d
		left outer join 
		    (select 
		        to_char(pay_time, 'YY/MM/DD') dt, 
		        sum(total_amount) daily,
                pay_type
		    from payment where pay_type='구매' and status='결제완료'
		    group by to_char(pay_time, 'YY/MM/DD'), pay_type)p
		on p.dt = d.dt 
    order by d.dt asc
	</select>
	
	<!-- 이번달 누적 상품 판매금액 -->
	<select id="shopThisMonth" resultType="ShopChartVO">
	 select 
      to_char((TO_DATE(sysdate,'YYYY-MM-DD')), 'month') "thisMonth", 
      sum("sum") "thisMonthAmount" 
      from (
		select
		 d.dt "date",
		 nvl(p.at, 0) "sum"
		from
		    (select 
		        to_char(trunc(sysdate, 'MM') + level - 1, 'YY/MM/DD') dt ,
		        to_char(to_date(trunc(sysdate, 'MM'), 'YY/MM/DD') + rownum - 1, 'month') mth
		    from dual <![CDATA[connect by level <= (last_day(sysdate) - trunc(sysdate, 'MM') +1 )]]>)d
		left outer join 
		    (select 
		        to_char(pay_time, 'YY/MM/DD') dt, 
		        to_char(pay_time, 'DAY') dow, 
		        sum(total_amount) at,
		    	pay_type pt
		    from payment where pay_type='구매' and status='결제완료'
            group by to_char(pay_time, 'YY/MM/DD'), to_char(pay_time, 'DAY'), pay_type)p
		on p.dt = d.dt 
		order by d.dt asc)
	</select>
	
	<!-- 최근 6개월간 월별 누적 상품 판매금액 -->
	<select id="shopAmountMonthly" resultType="ShopChartVO">
	select
		d.mth "monthly",
		nvl(p.at, 0) "monthlyAmount"
	   from
		    (select 
		       to_char(add_months(to_date(sysdate, 'YY/MM/DD'), - (level-1)-1), 'month') mth 
		     from dual
		     <![CDATA[connect by add_months(to_date(sysdate, 'YY/MM/DD'), - (level-1)-1) >= add_months(to_date(sysdate, 'YY/MM/DD'), -6)]]>)d
		left outer join
		    (select 
		        to_char(pay_time, 'month') mth,
		        sum(total_amount) at,
                pay_type pt
		    from payment where pay_type='구매' and status='결제완료'
		    group by to_char(pay_time, 'month'), pay_type)p
		on p.mth = d.mth 
		order by lpad(d.mth, 2, '0')
	</select>
	
	<!-- 최근 12개월간 월별 누적 상품 판매금액 -->
	<select id="shopAmountMoy" resultType="ShopChartVO">
	  select
		d.mth "moy",
		nvl(p.at, 0) "moyAmount"
	   from
		    (select 
		        to_char(add_months(to_date(sysdate, 'YY/MM/DD'), - (level-1)-1), 'month') mth 
		      from dual
		       <![CDATA[ connect by add_months(to_date(sysdate, 'YY/MM/DD'), - (level-1)-1) >= add_months(to_date(sysdate, 'YY/MM/DD'), -11)]]>)d
		left outer join
		    (select 
		        to_char(pay_time, 'month') mth,
		        sum(total_amount) at,
                pay_type pt
		    from payment where pay_type='구매' and status='결제완료'
            group by to_char(pay_time, 'month'), pay_type)p
		on p.mth = d.mth 
		order by lpad(d.mth, 2, '0')
	</select>
	
	<!-- 기부 / 구매 중 기간검색 -->
	<select id="dateSearch" parameterType="map" resultType="SearchChartVO">
	  select
        d.dt "date",
        nvl(p.daily, 0) "dailyAmount"
   	 from
   	 	(select 
   	 		to_char(to_date(#{start}, 'YYYY/MM/DD') + level - 1, 'YYYY/MM/DD') dt
          from dual 
           <![CDATA[connect by level <= (to_date(#{end}, 'YYYY/MM/DD') - to_date(#{start},'YYYY/MM/DD') + 1)]]>)d
        left outer join    
        (select 
		        to_char(pay_time, 'YYYY/MM/DD') dt, 
                sum(total_amount) daily,
                pay_type
		    from payment 
		    where pay_type=#{payType} and status='결제완료'
		    group by to_char(pay_time, 'YYYY/MM/DD'), pay_type)p
        on d.dt = p.dt order by d.dt asc
	</select>
	
</mapper>

