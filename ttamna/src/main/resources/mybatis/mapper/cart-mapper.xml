<?xml version="1.0" encoding="UTF-8" ?> 

<!-- mybatis mapper 파일
	- DBMS에서 실행할 SQL구문을 저장하는 XML파일 
	- namespace를 통해서 여러개의 매퍼를 구분한다
	- 테이블 당 한 개씩 만드는 것이 일반적이면 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다
 	- <insert>, <select>, <update>, <delete>를 이용해서 CRUD 구문을 작성한다
 	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다
 	- parameterType : 구문을 실행하기 위해 필요한 데이터의 형태 
 	- resultType : 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다
 -->

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cart">

<!-- 장바구니 리스트 -->
<select id="list" resultType="CartDto">
	select * from cart order by cart_time desc
</select>

<!-- 장바구니 시퀀스 -->
<select id="seq" resultType="int">
	select cart_seq.nextval from dual
</select>


<!-- 장바구니에 추가 -->
<insert id="insert" parameterType="CartDto">
	insert into cart values(
		#{cartNo}, #{shopNo}, #{memberId}, #{shopImgNo}, sysdate, 1, #{shopGoods}, ${shopPrice}
	)
</insert>	

<!-- 장바구니 삭제 -->
<delete id="delete" parameterType="int">
	delete cart where cart_no = #{cartNo}
</delete> 	

<!-- 장바구니에 중복으로 담았을 경우 -->
<update id="add" parameterType="int">
	update cart set cart_count = cart_count + 1 where cart_no = #{cartNo}
</update>

<!-- 장바구니 정보 1개 가져오기 -->
<select id="get" parameterType="int" resultType="CartDto">
	select * from cart where cart_no = ${cartNo}
</select>
</mapper>

