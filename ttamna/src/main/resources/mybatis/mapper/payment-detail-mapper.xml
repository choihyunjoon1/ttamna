<?xml version="1.0" encoding="UTF-8" ?> 

<!-- mybatis mapper 파일
	- DBMS에서 실행할 SQL구문을 저장하는 XML파일 
	- namespace를 통해서 여러개의 매퍼를 구분한다
	- 테이블 당 한 개씩 만드는 것이 일반적이면 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다
 	- <insert>, <select>, <update>, <delete>를 이용해서 CRUD 구문을 작성한다
 	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다
 	- parameterType : 구문을 실행하기 위해 필요한 데이터의 형태 
 	- resultType : 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다
 -->

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="payDetail">
	
	<insert id="insert" parameterType="PaymentDetailDto">
		insert into pay_detail values(#{payNo}, #{shopNo}, #{shopGoods}, #{quantity},  #{price}, '결제')
	</insert>
	
	<select id="list" parameterType="int" resultType="PaymentDetailDto">
		select * from pay_detail where pay_no = #{payNo} order by shop_no desc
	</select>
	
	<select id="get" parameterType="map" resultType="PaymentDetailDto">
		select * from pay_detail where pay_no = #{payNo} and shop_no = #{shopNo}
	</select>
	
	
	<update id="cancel" parameterType="map">
		update pay_detail set status='취소' 
		where pay_no = #{payNo} and shop_no = #{shopNo}
	</update>
	
	<select id="cancelAvailableAmount" parameterType="int" resultType="long">
		select nvl(sum(price), 0) from pay_detail where pay_no = #{payNo} and status = '결제'
	</select>
	
	<update id="cancelAll" parameterType="int">
		update pay_detail set status='취소'
		where pay_no = #{payNo}
	</update>
	
	
	
</mapper>

