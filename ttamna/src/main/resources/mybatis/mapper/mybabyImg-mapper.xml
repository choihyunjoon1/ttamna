<?xml version="1.0" encoding="UTF-8" ?> 

<!-- mybatis mapper 파일
	- DBMS에서 실행할 SQL구문을 저장하는 XML파일 
	- namespace를 통해서 여러개의 매퍼를 구분한다
	- 테이블 당 한 개씩 만드는 것이 일반적이면 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다
 	- <insert>, <select>, <update>, <delete>를 이용해서 CRUD 구문을 작성한다
 	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다
 	- parameterType : 구문을 실행하기 위해 필요한 데이터의 형태 
 	- resultType : 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다
 -->

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybabyImg">
	<!-- 시퀀스 -->
	<select id="seq" resultType="int">
		select mybaby_img_seq.nextval from dual
	</select>
	<!-- insert -->
	<insert id="insert" parameterType="MybabyImgDto">
		insert into mybaby_img values(
			#{mybabyImgNo},#{mybabyNo},#{mybabyImgUpload},
			#{mybabyImgSize},#{mybabyImgType}
		)
	</insert>
	<!-- 파일 가져오기(다중) -->
	<select id="getFiles" parameterType="int" resultType="MybabyImgDto">
		select * from mybaby_Img where mybaby_no = #{mybabyNo} order by mybaby_img_no asc
	</select>
	<!-- 파일 한개만 가져오기-->
	<select id="getFileOne" parameterType="int" resultType="MybabyImgDto">
		select * from(
			select rownum rn,TMP.* from (
				select * from mybaby_Img where mybaby_no = #{mybabyNo} order by mybaby_img_no asc
				) 
			TMP) 
		where rn = 1
	</select>
	<!-- 파일 가져오기 -->
	<select id="getFile" parameterType="int" resultType="MybabyImgDto">
		select * from mybaby_Img where mybaby_img_no = #{mybabyImgNo}
	</select>
	
	<!-- 게시글 번호로 이미지 디비 삭제 -->
	<delete id="delete" parameterType="int">
		delete mybaby_img where mybaby_no = #{mybabyNo}
	</delete>
	
	<delete id="dropImg" parameterType="int">
		delete mybaby_img where mybaby_img_no = #{mybabyImgNo}
	</delete>
	
</mapper>

