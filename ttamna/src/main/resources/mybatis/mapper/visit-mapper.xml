<?xml version="1.0" encoding="UTF-8" ?> 

<!-- mybatis mapper 파일
	- DBMS에서 실행할 SQL구문을 저장하는 XML파일 
	- namespace를 통해서 여러개의 매퍼를 구분한다
	- 테이블 당 한 개씩 만드는 것이 일반적이면 따라서 namespace를 테이블명으로 작성하면 구분이 용이하다
 	- <insert>, <select>, <update>, <delete>를 이용해서 CRUD 구문을 작성한다
 	- 각 구문은 외부에서 호출이 가능하도록 반드시 ID를 겹치지 않게 부여해야 한다
 	- parameterType : 구문을 실행하기 위해 필요한 데이터의 형태 
 	- resultType : 구문을 실행한 결과를 어떤 형태로 변환해야 하는지를 말한다
 -->

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="visit">

	<!-- 시퀀스 번호를 얻는 구문-->
	<select id="sequence" resultType="int">
		select visit_seq.nextval from dual
	</select>
	
	<!-- 로그인 시 접속정보를 저장하기 위한 구문. visit_idx에 시퀀스는 미리 받음-->
	<insert id="log" parameterType="VisitDto">
		insert into visit values(#{visitIdx}, #{visitId}, sysdate)
	</insert>
	
	<!-- 저장한 기록에 중복아이디가 있으면 접속시간이 하루이상 지났으면 접속시간을 업데이트,
		   중복아이디가 아니라면 정보를 등록 처리
		   visit_idx에 시퀀스는 미리 받음	   
	-->
    <insert id="allInOneLog" parameterType="VisitDto">
    	merge into visit V using dual on (V.visit_id = #{visitId})
    		when matched then
    		update set visit_time = sysdate where <![CDATA[sysdate - visit_time < 1 ]]>
    		when not matched then
    		insert(visit_idx, visit_id, visit_time)
    			values(#{visitIdx}, #{visitId}, sysdate)
    </insert>
    
    <!-- 하루 방문자 수 카운트. 현재 날짜에서 접속시간을 뺀 값이 1(하루)보다 작으면 당일 접속 -->
    <select id="countByDay" resultType="int">
    	select count(*) from visit where <![CDATA[sysdate - visit_time < 1 ]]>
    </select>
    
    <!-- 7일간 일별 방문자수 카운트 구문 
    <select id="countDaily" resultType="VisitorChartVO">
    	
    </select>
    -->
    
</mapper>

