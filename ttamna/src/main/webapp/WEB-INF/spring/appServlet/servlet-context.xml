<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	Spring에서 사용자 요청을 모두 처리하는 DispatcherServlet이 알아야 하는 설정
	(D.S에게 부탁하는 내용들이 적혀있는 문서)
	- 사용자가 OOO과 같은 요청을 보낸다면 OOO으로 처리해주세여
	- 요청과 관련된 설정이 이곳에 작성됨
 -->
<beans xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	
	<!-- View Resolver 설정
		- 컨트롤러에서 업무 수행 후 JSP와 연결할 때 작성하는 주소를 간소화 하는 역할의 도구 
		- org.springframework.web.servlet.view.InternalResourceViewResolver
		- prefix 라는 속성으로 접두사를 설정(/WEB-INF/views/)
		- suffix 라는 속성으로 접미사를 설정(.jsp)
	 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- Component Scan 설정
		- 자동으로 구성요소들을 탐색하는 설정
		- 특정 지점(base-package="top-level-package")을 설정하여 해당 지점에 있는 모든 요소를 탐색하여 등록한다
	 	- spring-context 모듈의 설정
	 	(Namespace에 xmlns:context="http://www.springframework.org/schema/context 가 존재해야 함)
	 	- 제외하고 싶은 내용은 exclude-filter, 추가하고 싶은 내용은 include-filter를 사용
	 	- @(어노테이션)설정이 된 파일들을 탐색하여 자동으로 이 파일에 등록 처리
	 	- @Controller, @RestController
	 	- annotaion-driven 설정을 해야 @가 활성화 된다
	 	- 기본설정을 사용하지 않는것(use-default-filters="false")으로 하고 @Controller는 포함(<context:include-filter>)하는 것으로 지정해준다
	 -->
	<mvc:annotation-driven></mvc:annotation-driven>
	<context:component-scan base-package="com.kh.ttamna" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- DispatcherServlet에서 처리하지 말아야 할 요청을 설정
		- 이미지, 음악, CSS, JavaScript 파일 등은 정적 파일이므로 굳이 컨트롤러를 거칠 필요가 없음 
		- location은 실제 위치를 지정하고 mapping은 주소의 패턴을 지정한다
				/resources/** : /resources/로 시작하는 경로 전부
		- 원하는 주소를 특정 위치로 연결할 수 있다
	 -->
	 <mvc:resources location="/resources/" mapping="/resources/**"></mvc:resources>
	 
	 <!-- 파일 업로드(multipart) 방식 요청을 처리할 수 있는 도구 등록 
		- 아이디는 반드시 multipartResolver라고 작성해야 한다
		- 이 도구는 파일을 먼저 저장하지 않고 사용자가 저장 여부를 선택할 수 있도록 처리한다
	-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"></property>
		<property name="maxUploadSizePerFile" value="10485760"></property>
		<property name="maxUploadSize" value="104857600"></property>
	</bean>
	
	<!-- 
	<bean id="directory" class="java.io.File">
		<constructor-arg index="0" value="D:/upload/member"></constructor-arg>
	</bean>
	 -->
	 
	 <!-- 인터셉터 등록 -->
	 <mvc:interceptors>
	 	
	 	<!-- LoginInterceptor : 비회원 차단 -->
	 	<mvc:interceptor>
	 		<mvc:mapping path="/member/logout"/>
	 		<mvc:mapping path="/member/mypage/**"/>
	 		<mvc:mapping path="/mybaby/write"/>
	 		<mvc:mapping path="/mybaby/edit"/>
	 		<mvc:mapping path="/mybaby/delete"/>
	 		<mvc:mapping path="/adopt/write"/>
	 		<mvc:mapping path="/adopt/edit"/>
	 		<mvc:mapping path="/adopt/delete"/>
	 		<mvc:mapping path="/shop/order"/>
	 		<mvc:mapping path="/shop_reply/insert"/>
	 		<mvc:mapping path="/shop_reply/delete"/>
	 		<mvc:mapping path="/donation_reply/insert"/>
	 		<mvc:mapping path="/donation_reply/delete"/>
	 		<mvc:mapping path="/mybaby_reply/insert"/>
	 		<mvc:mapping path="/mybaby_reply/delete"/>
	 		<mvc:mapping path="/question/write"/>
	 		<mvc:mapping path="/question/edit"/>
	 		<mvc:mapping path="/question/detail"/>
	  		<bean class="com.kh.ttamna.interceptor.LoginInterceptor"></bean>
	 	</mvc:interceptor>
	 	<!-- 문의내역 상세페이지 자기글 또는 관리자만 접근 가능 -->
	 	<mvc:interceptor>
	 		<mvc:mapping path="/question/detail"/>
	 		<bean class="com.kh.ttamna.interceptor.QuestionInterceptor"></bean>
	 	</mvc:interceptor>
	 	<!--  GradeInterceptor : 등급이 '보호소' 또는 '관리자'만 접근 가능 
	 		예: 기부 게시글 등록/수정/삭제....									-->
	 	<mvc:interceptor>
	 		<mvc:mapping path=""/>
	 		<bean class="com.kh.ttamna.interceptor.GradeInterceptor"></bean>
	 	</mvc:interceptor>
	 	
	 	
	 	<!--  AdminInterceptor : '관리자' 등급만 접근 가능 -->
	 	<mvc:interceptor>
	 		<mvc:mapping path="/admin/**"/>
	 		<mvc:mapping path="/shop/write"/>
	 		<mvc:mapping path="/shop/edit"/>
	 		<mvc:mapping path="/shop/delete"/>
	 		<bean class="com.kh.ttamna.interceptor.AdminInterceptor"></bean>
	 	</mvc:interceptor>
	 	
	 	<!-- 기부게시판 등록, 수정, 삭제를 보호소or관리자 등급만 접근 가능하게 인터셉터 설정 -->
	 	<mvc:interceptor>
	 		<mvc:mapping path="/donation/insert"/>
	 		<mvc:mapping path="/donation/edit"/>
	 		<mvc:mapping path="/donation/delete"/>
	 		<bean class="com.kh.ttamna.interceptor.DonationInterceptor"></bean>
	 	</mvc:interceptor>
	 </mvc:interceptors>
	 
	 
</beans>










