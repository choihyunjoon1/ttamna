/*
    CSS 파일
    = 디자인 코드만 모아두는 파일
    = 매 페이지마다 새롭게 디자인을 하지 않도록 자주 사용하는 디자인을 보관
*/


/*
    모든 디자인은 크기(폭, 높이) 기준을 "테두리"까지로 한다.
    모든 디자인에는 고딕(sans-serif)체를 적용한다.
*/
* {
    box-sizing: border-box;
}

/*
    모든 영역은 컨테이너를 만들면서 시작한다.
    자주 사용할 컨테이너를 크기별로 준비해둔다.(100px ~ 1000px)
*/

.container-100 {
    width: 100px;
}

.container-200 {
    width: 200px;
}

.container-300 {
    width: 300px;
}

.container-400 {
    width: 400px;
}

.container-500 {
    width: 500px;
}

.container-600 {
    width: 600px;
}

.container-700 {
    width: 700px;
}

.container-800 {
    width: 800px;
}

.container-900 {
    width: 900px;
}

.container-1000 {
    width: 1000px;
}

/*
    컨테이너 내부에는 행(row)을 배치하여 자리를 확보한다.
*/
.row {
    margin-top: 10px;
    margin-bottom: 10px;
}

/*
    form 입력요소 스타일링
    
    = .form-input은 입력창
    = .form-btn은 버튼
    = 기본적으로 100%의 폭을 가지도록 설정
*/
.form-input,
.form-btn {
    width: 100%;
    font-size: 20px;
    padding: 10px;
}

.form-input {
    border: 1px solid rgb(43, 48, 90);
}

.form-btn {
    color: white;
    background-color: rgb(43, 48, 90);
    font-weight: bold;
}

.form-block {
    display: block;
}

.form-inline {
    width: auto;
}

/*
    내용 정렬 스타일링
    .left = 왼쪽 정렬(기본값)
    .center = 가운데 정렬
    .right = 오른쪽 정렬
*/
.left {
    text-align: left;
}

.center {
    text-align: center;
}

.right {
    text-align: right;
}

/*
    영역 배치
    .container-left = 영역 왼쪽 배치
    .container-center = 영역 가운데 배치
    .container-right = 영역 오른쪽 배치
*/
.container-left {
    margin-left: 0;
    margin-right: auto;
}

.container-center {
    margin-left: auto;
    margin-right: auto;
}

.container-right {
    margin-left: auto;
    margin-right: 0;
}

/*
    textarea 스타일링
    = 우리가 만드는 페이지에서 textarea의 가로 변경은 허용하지 않는다.
    = textarea는 기본적으로 크기 변경이 불가능하게 만들고, 세로 변경은 class="vertical"을 추가
*/
textarea {
    resize: none;
}

textarea.vertical {
    resize: vertical;
    min-height: 200px;
}

/*
    페이징 스타일링
    연계 선택자(자손 선택자)
    = .pagination 안에 있는 a태그만 선택하고 싶은 경우
    = .pagination > a
    = 모든 a태그를 수정하면 위험하므로 원하는 영역으로 제한하여 수정
    REM
    = 글자 크기에 비례하여 설정하는 비율형 크기
    = 2.5rem은 기본 글자 높이의 2.5배라는 의미
    = 글자 크기가 변할 수 있는 경우 유용하게 사용 가능
*/
.pagination {
    text-align: center;
}

.pagination>a,
.pagination>a:link,
.pagination>a:visited {
    color: black;
    text-decoration: none;
    border: 1px solid gray;
    min-width: 2.5rem;
    display: inline-block;
    text-align: center;
    padding: 0.5rem;
}

.pagination>a:hover,
.pagination>a.active {
    color: red;
    border: 1px solid red;
}

/*
    이미지 스타일
    - 공용 스타일 : .image
    - 확장 스타일
        .image-round : 둥근 이미지
        .image-border : 테두리가 있는 이미지
        .image-hover : 마우스가 올라가면 테두리가 생기는 이미지
        .image-blur : 마우스가 올라가면 선명해지는 이미지
        .image-shadow : 그림자가 생기는 이미지
        .image-leaf : 나뭇잎 모양의 이미지
*/
.image {
    border: 2px solid transparent;
}

.image.image-round {
    border-radius: 50%;
}

.image.image-border,
.image.image-hover:hover {
    border: 2px solid gray;
}

.image.image-blur {
    /* 
        opacity를 이용하여 불투명 정도를 0(0%) 부터 1(100%) 사이에서 설정 
        background에 부여하는 alpha는 배경만 투명해지지만, opacity는 태그 전체가 투명(내용물 포함)
    */
    opacity: 0.4;
}

.image.image-blur:hover {
    opacity: 1;
}

.image.image-shadow {
    /*
        box-shadow : x축위치 y축위치 번짐정도 확장크기 색상
        box-shadow: 5px 5px 0px 0px black;
    */
    box-shadow: 0px 0px 10px 2px yellow;
}

.image.image-leaf {
    border-top-left-radius: 50%;
    border-bottom-right-radius: 50%;
}

/*
    테이블 스타일링
    = table은 태그가 한 개가 아니다.
    - 공용 스타일 : .table
    - 확장 스타일
            .table-border - 테두리 추가
            .table-hover - 마우스가 올라간 줄에 배경색이 표시되는 효과 부여(내용만)
            .table-stripe - 줄무늬 테이블
*/

.table {
    width:100%;
}
.table > thead > tr > th, 
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td {
    padding:0.5rem;
    text-align: center;
}

.table.table-border {
    border:1px solid black;
    border-collapse: collapse;
}
.table.table-border > thead > tr > th, 
.table.table-border > thead > tr > td,
.table.table-border > tbody > tr > th,
.table.table-border > tbody > tr > td,
.table.table-border > tfoot > tr > th,
.table.table-border > tfoot > tr > td {
    border:1px solid black;
}

.table.table-hover > tbody > tr:hover {
    background-color:#EEEEEE;
}

/*
    :nth-child(2n) 일 경우 n=1부터 증가하면서 패턴으로 적용
*/
.table.table-stripe > thead > tr,
.table.table-stripe > tbody > tr:nth-child(2n) {
    background-color:#EEEEEE;
}

/*
    float 스타일링
    1. float는 반드시 필요한 상황이 있다.
    2. 기존 화면과 충돌이 나는 상황은 싫다.
    3. float 전용 영역을 만들어서 모든 상황을 그 안에서 해결하도록 처리한다.
    가상 선택자
    = 존재하지 않는 영역을 가상으로 선택하여 디자인을 부여할 수 있다.
    = 원래 없는 영역이기 때문에 내용을 뭐라도 적어야 한다(빈칸이라도)
*/
.float-container::after {
    content:"";
    display: block;
    clear: both;
}
.float-container > .float-item-left {
    float:left;
}
.float-container > .float-item-right {
    float:right;
}

/*
    flex layout
    = display:flex; 를 통해 영역 내부의 요소를 float처럼 처리할 수 있다.
    = clear 처리가 필요하지 않다.
    = 높이를 자동으로 맞춰준다.
    = 비율 설정을 지원(flex-grow)
    = 배치 순서 변경을 지원(flex-direction)
*/
.flex-container {
    display: flex;
    flex-direction: row;
}

/*
    list 스타일링
    (1) list에는 항목을 표시하는 기호가 있는데 이를 제거한다(list-style)
    (2) ul, li에는 기본 여백이 존재하는데 이를 제거한다(padding, margin).
    (3) .slide-menu에 배치된 1차 메뉴(li)는 flex 형태로 배치한다.
    (4) .slide-menu에 배치된 1차 메뉴(li)에 간격(폭)을 설정한다.
    (5) .slide-menu에 배치된 숨겨진 메뉴(ul)는 position을 absolute로 설정한다.
    (6) 모든 메뉴항목(a)의 배치와 디자인을 변경하고 여백을 설정
    (7) 색상이나 hover 설정등을 구현
    (8) 2차 항목부터는 우측에 표시되도록 설정
*/
.slide-menu, .slide-menu ul {/*(1)*/
    list-style: none;
}
.slide-menu, .slide-menu ul, .slide-menu li {/*(2)*/
    padding:0;
    margin:0;
}
.slide-menu {/*(3)*/
    display: flex;
}
.slide-menu > li {/*(4)*/
    width:120px;
}
.slide-menu li {/*(5)*/
    /*absolute의 기준점 설정을 위하여 position 설정*/
    position:relative;
}
.slide-menu ul {/*(5)*/
    position: absolute;
    top:45px;
    left:0;
}
.slide-menu li > a {/*(6) */
    display: block;
    width:120px;
    text-align: center;
    text-decoration: none;
    color:black;
    padding:0.75rem;
}
/*(7)*/
.slide-menu , .slide-menu ul{
    background-color: #EEEEEE;
}
.slide-menu li:hover > a {
    background-color:#CCCCCC;
    color:black;
}

/*(8)*/
.slide-menu > li > ul ul {
    top:0;
    left:120px;
}

.slide-menu > li.flex-right {
    margin-left: auto;
    margin-right:0;
}

/* 모든 서브메뉴를 숨겼다가 마우스 올라가면 표시되도록 설정 */
.slide-menu ul {
    display:none;
}
.slide-menu li:hover > ul {
    display:block;
}

/*마이페이지 화면 나누기 설정*/
	.container-side-menu{
		width: 100%;
		height:500px;
	}
	.container-side-left{
		width : 30%;
		float: left;
		box-sizing : border-box;
		
	}
	.container-side-center{
		width : 70%;
		float:right;
		box-sizing: border-box;
	}